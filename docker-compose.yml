version: "3"
services:
  nodeapp:
    container_name: southwest_app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    image: southwest-price-drop-bot
    command: ["npm", "run", "start"]
    ports:
      - "3000:3000"
    links:
      - mongodb
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - WAIT_HOSTS=mongodb:27017
      - VIRTUAL_PORT=3000
    env_file: stack.env
    labels:
      com.centurylinklabs.watchtower.enable: false
    networks:
      - node-sw-bot-network
      - web

  nodescheduler:
    container_name: southwest_check
    restart: always
    image: southwest-price-drop-bot
    command: ["/home/app/check-loop.sh"]
    env_file: stack.env
    links:
      - mongodb
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - WAIT_HOSTS=mongodb:27017
    labels:
      com.centurylinklabs.watchtower.enable: false
    networks:
      - node-sw-bot-network

  mongodb:
    container_name: mongodb
    image: mongo
    volumes:
      - /mnt/main/config/southwest:/data/db:Z
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/sw_db --quiet  ##change db to whatever you specify in .env
      interval: 30s
      timeout: 10s
      retries: 12
    restart: unless-stopped
    env_file: stack.env
    labels:
      com.centurylinklabs.watchtower.enable: false
    networks:
      - node-sw-bot-network

networks:
  node-sw-bot-network:
    driver: bridge
  web:
    external: true